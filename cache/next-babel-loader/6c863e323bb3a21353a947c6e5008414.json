{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport * as superagent from 'superagent';\nimport { baseURl } from '../config';\nexport default class extends React.Component {\n  static async getInitialProps({\n    req\n  }) {\n    // const hostname = req ? `${req.protocol}://${req.get('Host')}` : '';\n    // const baseUrl = `${hostname}/api/`;\n    if (req) {\n      const {\n        db\n      } = req;\n      const list = await db.collection('Registrations').find().sort({\n        createdAt: -1\n      }).toArray();\n      return {\n        list\n      };\n    }\n\n    const {\n      list\n    } = await superagent.get(baseURl).then(res => res.body);\n    return {\n      list\n    };\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      formData: {\n        email: '',\n        name: '',\n        phone: '',\n        type: '',\n        count: 0\n      }\n    };\n  }\n\n  setForm(prop) {\n    return ev => {\n      const state = this.state || {};\n      const formData = state.formData || {};\n      this.setState(Object.assign({}, state, {\n        formData: Object.assign({}, formData, {\n          [prop]: ev.target.value\n        })\n      }));\n    };\n  }\n\n  isFormInvalid() {\n    const state = this.state || {};\n    const formData = state.formData || {};\n    return !formData.email || !formData.name || !formData.phone || !formData.type || !formData.count;\n  }\n\n  remove(_id) {\n    return ev => {\n      superagent.del(`${baseURl}/${_id}`).then(() => {\n        const state = this.state || {};\n        const list = this.state.list || this.props.list || [];\n        this.setState(Object.assign({}, state, {\n          list: list.filter(registration => registration._id !== _id)\n        }));\n      }).catch(error => console.error(error.stack));\n    };\n  }\n\n  add() {\n    return ev => {\n      ev.preventDefault();\n      const state = this.state || {};\n      const formData = state.formData || {};\n      this.setState(Object.assign({}, this.state, {\n        formData: {\n          email: '',\n          name: '',\n          phone: '',\n          type: '',\n          count: 0\n        }\n      }));\n      superagent.post(baseURl, formData).then(res => {\n        const state = this.state || {};\n        const list = this.state.list || this.props.list || [];\n        debugger;\n        this.setState(Object.assign({}, state, {\n          list: [res.body.registration].concat(list)\n        }));\n      }).catch(error => console.error(error.stack));\n    };\n  }\n\n  render() {\n    const list = this.state.list || this.props.list;\n    const {\n      formData\n    } = this.state;\n    console.log(this.props.query);\n    return __jsx(\"div\", {\n      id: \"container\",\n      className: \"jsx-2512804896\"\n    }, __jsx(\"h1\", {\n      className: \"jsx-2512804896\"\n    }, \"New Book\"), __jsx(\"div\", {\n      id: \"input-registration\",\n      className: \"jsx-2512804896\"\n    }, __jsx(\"form\", {\n      onSubmit: this.add(),\n      className: \"jsx-2512804896\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      onChange: this.setForm('name'),\n      value: formData.name,\n      placeholder: \"Name\",\n      className: \"jsx-2512804896\"\n    }), __jsx(\"input\", {\n      type: \"text\",\n      onChange: this.setForm('email'),\n      value: formData.email,\n      placeholder: \"Email\",\n      className: \"jsx-2512804896\"\n    }), __jsx(\"input\", {\n      type: \"text\",\n      onChange: this.setForm('phone'),\n      value: formData.phone,\n      placeholder: \"Phone\",\n      className: \"jsx-2512804896\"\n    }), __jsx(\"input\", {\n      type: \"text\",\n      onChange: this.setForm('type'),\n      value: formData.type,\n      placeholder: \"Ticket Type\",\n      className: \"jsx-2512804896\"\n    }), __jsx(\"input\", {\n      type: \"text\",\n      onChange: this.setForm('count'),\n      value: formData.count,\n      placeholder: \"Count\",\n      className: \"jsx-2512804896\"\n    }), __jsx(\"button\", {\n      disabled: this.isFormInvalid(),\n      className: \"jsx-2512804896\"\n    }, \"Add\"))), __jsx(\"h1\", {\n      className: \"jsx-2512804896\"\n    }, \"Registrations\"), __jsx(\"div\", {\n      id: \"registrations\",\n      className: \"jsx-2512804896\"\n    }, list.length > 0 && __jsx(\"ul\", {\n      className: \"jsx-2512804896\"\n    }, list.map(registration => __jsx(\"div\", {\n      key: registration._id,\n      className: \"jsx-2512804896\"\n    }, __jsx(\"span\", {\n      onClick: this.remove(registration._id),\n      className: \"jsx-2512804896\" + \" \" + \"remove\"\n    }, \"\\xD7\"), \"\\xA0\", __jsx(\"span\", {\n      className: \"jsx-2512804896\" + \" \" + \"description\"\n    }, __jsx(\"i\", {\n      className: \"jsx-2512804896\"\n    }, registration.name), \" by \", registration.email), __jsx(\"span\", {\n      className: \"jsx-2512804896\" + \" \" + \"phone\"\n    }, registration.phone), __jsx(\"span\", {\n      className: \"jsx-2512804896\" + \" \" + \"type\"\n    }, registration.type), __jsx(\"span\", {\n      className: \"jsx-2512804896\" + \" \" + \"count\"\n    }, registration.count))))), __jsx(_JSXStyle, {\n      id: \"2512804896\"\n    }, [\"div.jsx-2512804896{font-family:'Helvetica','sans-serif';}\", \"#container.jsx-2512804896{width:800px;margin-left:auto;margin-right:auto;}\", \"h1.jsx-2512804896{color:#ccbc1d;}\", \"button.jsx-2512804896{background-color:#ff257b;color:#ffffff;font-weight:bold;border:0px;border-radius:2px;padding:5px;padding-left:8px;padding-right:8px;margin:5px;}\", \"input.jsx-2512804896{padding:5px;border:0px;background-color:#f0f0f0;margin:5px;}\", \".description.jsx-2512804896{position:relative;top:-0.2em;}\", \".remove.jsx-2512804896{cursor:pointer;color:#ff257b;font-size:1.5em;}\"]));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}